<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.BoardColumnMapper">

    <resultMap id="BoardColumnAndIssues" type="io.choerodon.agile.infra.dto.ColumnAndIssueDTO">
        <id property="columnId" column="abc_column_id"/>
        <id property="categoryCode" column="abc_category_code"/>
        <id property="boardId" column="abc_board_id"/>
        <id property="minNum" column="abc_min_num"/>
        <id property="maxNum" column="abc_max_num"/>
        <id property="name" column="abc_name"/>
        <id property="sequence" column="abc_sequence"/>
        <id property="color" column="abc_color"/>
        <id property="objectVersionNumber" column="abc_object_version_number"/>
        <collection property="subStatusDTOS" autoMapping="true" ofType="io.choerodon.agile.infra.dto.SubStatusDTO">
            <id property="id" column="ais_id"/>
            <id property="completed" column="ais_completed"/>
            <id property="statusId" column="ais_status_id"/>
            <id property="position" column="ais_position"/>
            <id property="objectVersionNumber" column="ais_object_version_number"/>
            <collection property="issues" autoMapping="true" columnPrefix="ai_"
                        ofType="io.choerodon.agile.infra.dto.IssueForBoardDO"/>
        </collection>
    </resultMap>

    <sql id="selectIssueIdBysearchVO">
        SELECT
        ai.issue_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join agile_issue aii2 on aii2.project_id = #{projectId} and ai.parent_issue_id = aii2.issue_id
        WHERE ai.project_id = #{projectId} AND ai.apply_type = 'agile'
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.summary != null and searchVO.searchArgs.summary != "" '>
                AND ai.summary LIKE concat(concat('%',#{searchVO.searchArgs.summary}),'%')
            </if>
            <if test='searchVO.searchArgs.storyPoints != null and searchVO.searchArgs.storyPoints != "" '>
                AND ai.story_points LIKE concat(concat('%',#{searchVO.searchArgs.storyPoints}),'%')
            </if>
            <if test='searchVO.searchArgs.remainingTime != null and searchVO.searchArgs.remainingTime != "" '>
                AND ai.remaining_time LIKE concat(concat('%',#{searchVO.searchArgs.remainingTime}),'%')
            </if>
        </if>
        <if test='searchVO.onlyStory != null and searchVO.onlyStory'>
            and ai.type_code = 'story'
        </if>
        <if test='searchVO.advancedSearchArgs != null'>
            <if test='searchVO.advancedSearchArgs.issueTypeId != null and searchVO.advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="searchVO.advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.assigneeIds != null and searchVO.advancedSearchArgs.assigneeIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="searchVO.advancedSearchArgs.assigneeIds" item="assigneeId" open="(" separator=","
                         close=")">
                    #{assigneeId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.reporterIds != null and searchVO.advancedSearchArgs.reporterIds.size > 0'>
                AND ai.reporter_id IN
                <foreach collection="searchVO.advancedSearchArgs.reporterIds" item="reporterId" open="(" separator=","
                         close=")">
                    #{reporterId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.priorityId != null and searchVO.advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="searchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.statusId != null and searchVO.advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="searchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                         close=")">
                    #{statusId}
                </foreach>
            </if>
        </if>
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.updateStartDate != null and searchVO.searchArgs.updateStartDate != "" and searchVO.searchArgs.updateEndDate != null and searchVO.searchArgs.updateEndDate != "" '>
                and ai.last_update_date &gt;= #{searchVO.searchArgs.updateStartDate} and ai.last_update_date &lt;=
                #{searchVO.searchArgs.updateEndDate}
            </if>
            <if test='searchVO.searchArgs.createStartDate != null and searchVO.searchArgs.createStartDate != "" and searchVO.searchArgs.createEndDate != null and searchVO.searchArgs.createEndDate != "" '>
                and ai.creation_date &gt;= #{searchVO.searchArgs.createStartDate} and ai.creation_date &lt;=
                #{searchVO.searchArgs.createEndDate}
            </if>
            <if test='searchVO.searchArgs.component != null and searchVO.searchArgs.component != "" '>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM agile_component_issue_rel acir,agile_issue_component aic
                where acir.component_id = aic.component_id
                AND aic.name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.component}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.epic != null and searchVO.searchArgs.epic != "" '>
                AND ai.issue_id in (
                SELECT ai3.issue_id FROM agile_issue ai3 ,agile_issue ai4
                where ai3.epic_id = ai4.issue_id
                AND ai4.epic_name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.epic}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.version != null and searchVO.searchArgs.version != "" '>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM agile_version_issue_rel avir,agile_product_version apv
                where avir.version_id = apv.version_id
                AND apv.name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.version}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.sprint != null and searchVO.searchArgs.sprint != "" '>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM agile_issue_sprint_rel aisr,agile_sprint as2
                where aisr.sprint_id = as2.sprint_id
                AND as2.sprint_name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.sprint}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.label != null and searchVO.searchArgs.label != "" '>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM agile_label_issue_rel alir,agile_issue_label ail
                where alir.label_id = ail.label_id
                AND ail.label_name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.label}) ,'%') )
            </if>
        </if>
        <if test='searchVO.otherArgs != null'>
            <if test='searchVO.otherArgs.assigneeId != null and searchVO.otherArgs.assigneeId.size > 0'>
                AND (
                <if test='searchVO.otherArgs.assigneeIdNull != null and searchVO.otherArgs.assigneeIdNull == true'>
                    (ai.assignee_id = 0 or ai.assignee_id is null) OR
                </if>
                ai.assignee_id in
                <foreach collection="searchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                         close=")">
                    #{aId}
                </foreach>
                )
            </if>
            <if test='searchVO.otherArgs.statusId != null and searchVO.otherArgs.statusId.size > 0'>
                AND ai.status_id in
                <foreach collection="searchVO.otherArgs.statusId" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
            </if>
            <if test='searchVO.otherArgs.resolution !=null'>
                AND ai.status_id in (
                select ais.status_id from agile_issue_status ais where ais.status_id = ai.status_id and ais.project_id =
                ai.project_id
                <choose>
                    <when test="searchVO.otherArgs.resolution == 'true'">
                        and ais.is_completed = 1
                    </when>
                    <otherwise>
                        and ais.is_completed = 0
                    </otherwise>
                </choose>
                )
            </if>
            <if test='searchVO.otherArgs.component != null and searchVO.otherArgs.component.size > 0'>
                AND (
                <if test='searchVO.otherArgs.componentNull != null and searchVO.otherArgs.componentNull == true'>
                    ai.issue_id in (SELECT ai12.issue_id from agile_issue ai12 left join
                    agile_component_issue_rel acir2
                    on ai12.issue_id = acir2.issue_id WHERE
                    acir2.component_id is null ) OR
                </if>
                ai.issue_id in
                (SELECT acir2.issue_id FROM agile_component_issue_rel acir2 WHERE
                acir2.component_id in
                <foreach collection="searchVO.otherArgs.component" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
                ))
            </if>
            <if test='searchVO.otherArgs.sprint != null and searchVO.otherArgs.sprint.size > 0'>
                AND (
                <if test='searchVO.otherArgs.sprintNull != null and searchVO.otherArgs.sprintNull == true'>
                    ai.issue_id in (SELECT ai10.issue_id from agile_issue ai10 left join
                    agile_issue_sprint_rel aisr2
                    on ai10.issue_id = aisr2.issue_id WHERE
                    aisr2.sprint_id is null ) OR
                </if>
                ai.issue_id in
                (SELECT aisr2.issue_id FROM agile_issue_sprint_rel aisr2 WHERE
                aisr2.sprint_id in
                <foreach collection="searchVO.otherArgs.sprint" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
                ))
            </if>
            <if test='searchVO.otherArgs.epic != null and searchVO.otherArgs.epic.size > 0'>
                AND (
                <if test='searchVO.otherArgs.epicNull != null and searchVO.otherArgs.epicNull == true'>
                    (((ai.epic_id is null or ai.epic_id = 0) and ai.type_code in ('story', 'task', 'bug', 'feature'))
                    or (ai.parent_issue_id in (select ai7.issue_id from agile_issue ai7 where ai7.issue_id =
                    ai.parent_issue_id and
                    (ai7.epic_id is null or ai7.epic_id = 0) and ai.type_code = 'sub_task' ))) OR
                </if>
                ((ai.epic_id in
                <foreach collection="searchVO.otherArgs.epic" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
                and ai.type_code in ('story', 'task', 'bug', 'feature'))
                or (ai.parent_issue_id in (select ai7.issue_id from agile_issue ai7 where ai7.issue_id =
                ai.parent_issue_id and
                ai7.epic_id in
                <foreach collection="searchVO.otherArgs.epic" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
                ) and ai.type_code = 'sub_task'))
                )
            </if>
            <if test='searchVO.otherArgs.feature != null and searchVO.otherArgs.feature.size > 0'>
                AND (
                <if test='searchVO.otherArgs.featureNull != null and searchVO.otherArgs.featureNull == true'>
                    ((ai.feature_id is null or ai.feature_id = 0) and ai.type_code in ('story'))
                    OR
                </if>
                (ai.feature_id in
                <foreach collection="searchVO.otherArgs.feature" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
                and ai.type_code in ('story'))
                )
            </if>
            <if test='searchVO.otherArgs.version != null and searchVO.otherArgs.version.size > 0'>
                AND (
                <if test='searchVO.otherArgs.versionNull != null and searchVO.otherArgs.versionNull == true'>
                    ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                    left join agile_version_issue_rel avir44
                    on ai31.issue_id = avir44.issue_id
                    WHERE avir44.version_id is null ) OR
                </if>
                ai.issue_id in ( SELECT avir3.issue_id FROM
                agile_version_issue_rel avir3 WHERE avir3.version_id in
                <foreach collection="searchVO.otherArgs.version" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>)
                )
            </if>
            <if test='searchVO.otherArgs.label != null and searchVO.otherArgs.label.size > 0'>
                AND (
                <if test='searchVO.otherArgs.labelNull != null and searchVO.otherArgs.labelNull == true'>
                    ai.issue_id in (SELECT ai13.issue_id from agile_issue ai13 left join
                    agile_label_issue_rel alir2 on ai13.issue_id = alir2.issue_id WHERE
                    alir2.label_id is null ) OR
                </if>
                ai.issue_id in ( SELECT alir2.issue_id FROM
                agile_label_issue_rel alir2 WHERE alir2.label_id in
                <foreach collection="searchVO.otherArgs.label" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>)
                )
            </if>
            <if test='searchVO.otherArgs.issueIds != null and searchVO.otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="searchVO.otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
            <if test="searchVO.otherArgs.customField != null and searchVO.otherArgs.customField.size > 0">
                <if test="searchVO.otherArgs.customField.option != null and searchVO.otherArgs.customField.option.size > 0">
                    and
                    <foreach collection="searchVO.otherArgs.customField.option" item="item" open="(" separator="and"
                             close=")">
                        ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value ffv
                        WHERE
                        ffv.project_id = #{projectId}
                        AND ffv.field_id = #{item.fieldId}
                        AND ffv.option_id IN
                        <foreach collection="item.value" item="value" open="(" separator=","
                                 close=")">
                            #{value}
                        </foreach>
                        )
                    </foreach>
                </if>
                <if test="searchVO.otherArgs.customField.date != null and searchVO.otherArgs.customField.date.size > 0">
                    and
                    <foreach collection="searchVO.otherArgs.customField.date" item="item" open="(" separator="and"
                             close=")">
                        ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value ffv
                        WHERE
                        ffv.project_id = #{projectId}
                        AND ffv.field_id = #{item.fieldId}
                        AND ffv.date_value &gt;= #{item.startDate} AND ffv.date_value &lt;= #{item.endDate}
                        )
                    </foreach>
                </if>
                <if test="searchVO.otherArgs.customField.date_hms != null and searchVO.otherArgs.customField.date_hms.size > 0">
                    and
                    <foreach collection="searchVO.otherArgs.customField.date_hms" item="item" open="(" separator="and"
                             close=")">
                        ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value ffv
                        WHERE
                        ffv.project_id = #{projectId}
                        AND ffv.field_id = #{item.fieldId}
                        AND DATE_FORMAT(ffv.date_value, '%H:%i:%s') &gt;= #{item.startDate} AND DATE_FORMAT(ffv.date_value, '%H:%i:%s') &lt;= #{item.endDate}
                        )
                    </foreach>
                </if>
                <if test="searchVO.otherArgs.customField.number != null and searchVO.otherArgs.customField.number.size > 0">
                    and
                    <foreach collection="searchVO.otherArgs.customField.number" item="item" open="(" separator="and"
                             close=")">
                        ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value ffv
                        WHERE
                        ffv.project_id = #{projectId}
                        AND ffv.field_id = #{item.fieldId}
                        AND ffv.number_value = #{item.value}
                        )
                    </foreach>
                </if>
                <if test="searchVO.otherArgs.customField.string != null and searchVO.otherArgs.customField.string.size > 0">
                    and
                    <foreach collection="searchVO.otherArgs.customField.string" item="item" open="(" separator="and"
                             close=")">
                        ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value ffv
                        WHERE
                        ffv.project_id = #{projectId}
                        AND ffv.field_id = #{item.fieldId}
                        AND ffv.string_value LIKE CONCAT(CONCAT('%' ,#{item.value}) ,'%')
                        )
                    </foreach>
                </if>
                <if test="searchVO.otherArgs.customField.text != null and searchVO.otherArgs.customField.text.size > 0">
                    and
                    <foreach collection="searchVO.otherArgs.customField.text" item="item" open="(" separator="and"
                             close=")">
                        ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value ffv
                        WHERE
                        ffv.project_id = #{projectId}
                        AND ffv.field_id = #{item.fieldId}
                        AND ffv.text_value LIKE CONCAT(CONCAT('%' ,#{item.value}) ,'%')
                        )
                    </foreach>
                </if>
            </if>
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        <if test='assigneeFilterIds != null and assigneeFilterIds.size > 0'>
            AND ai.assignee_id IN
            <foreach collection="assigneeFilterIds" item="assigneeFilterId"
                     open="(" close=")" separator=",">
                #{assigneeFilterId}
            </foreach>
        </if>
    </sql>

    <select id="selectColumnsByBoardId" resultMap="BoardColumnAndIssues">
        SELECT
        abc.column_id AS abc_column_id,
        abc.category_code AS abc_category_code,
        abc.board_id AS abc_board_id,
        abc.min_num AS abc_min_num,
        abc.max_num AS abc_max_num,
        abc.name AS abc_name,
        abc.sequence AS abc_sequence,
        alv1.name AS abc_color,
        abc.object_version_number AS abc_object_version_number,
        ais.id AS ais_id,
        ais.is_completed AS ais_completed,
        ais.status_id as ais_status_id,
        ais.object_version_number AS ais_object_version_number,
        ai.issue_id AS ai_issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS ai_issue_num,
        ai.summary AS ai_summary,
        ai.assignee_id AS ai_assignee_id,
        ai.priority_id AS ai_priority_id,
        ai.issue_type_id AS ai_issue_type_id,
        ai.parent_issue_id AS ai_parent_issue_id,
        ai.type_code AS ai_type_code,
        ai.rank AS ai_rank,
        ai.epic_id AS ai_epic_id,
        ai.stay_date AS ai_stay_date,
        ai.object_version_number AS ai_object_version_number,
        ai.relate_issue_id AS ai_relate_issue_id,
        abcsr.position as  ais_position
        FROM
        agile_board_column abc
        LEFT JOIN agile_board_column_status_rel abcsr ON abc.column_id = abcsr.column_id
        LEFT JOIN agile_issue_status ais ON  ais.project_id = abc.project_id and ais.status_id = abcsr.status_id
        LEFT JOIN (SELECT ai1.*
        from agile_issue ai1, agile_issue_sprint_rel aisr
        WHERE aisr.sprint_id = #{sprintId} AND ai1.issue_id = aisr.issue_id
        AND ai1.type_code in ('story', 'task', 'bug', 'sub_task')
        <if test='onlyStory != null and onlyStory == true'>
            AND ai1.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai1.assignee_id = #{assigneeId}
        </if>
        <if test='filterSql != null'>
            AND ai1.issue_id IN (${filterSql})
        </if>
        <if test='assigneeFilterIds != null and assigneeFilterIds.size > 0'>
            AND ai1.assignee_id IN
            <foreach collection="assigneeFilterIds" item="assigneeFilterId"
                     open="(" close=")" separator=",">
                #{assigneeFilterId}
            </foreach>
        </if>
        <if test='searchList != null and searchList.size > 0'>
            <foreach collection="searchList" item="searchVO">
                AND ai1.issue_id IN (<include refid="selectIssueIdBysearchVO"/>)
            </foreach>
        </if>
        <if test='priorityIds != null and priorityIds.size > 0'>
            AND ai1.priority_id IN
            <foreach collection="priorityIds" item="priorityId" open="(" close=")" separator=",">
                #{priorityId}
            </foreach>
        </if>
        ) ai ON ai.status_id = ais.status_id
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN lookup_value alv1 ON abc.color_code = alv1.value_code
        WHERE
        abc.project_id = #{projectId} AND abc.board_id = #{boardId}
        ORDER BY abc.sequence
    </select>

    <select id="queryParentIssuesByIds" resultType="io.choerodon.agile.infra.dto.ParentIssueDTO">
        select
        ai.issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS issue_num,
        ai.summary,
        ai.status_id,
        ai.issue_type_id,
        ai.object_version_number
        from agile_issue ai
        left join agile_project_info api ON api.project_id = ai.project_id
        where ai.project_id = #{projectId} and ai.issue_id in
        <foreach collection="parentIds" item="parentId"
                 open="(" close=")" separator=",">
            #{parentId}
        </foreach>
    </select>


    <select id="queryColumnsByIssueIds" resultMap="BoardColumnAndIssues">
        SELECT
        abc.column_id AS abc_column_id,
        abc.category_code AS abc_category_code,
        abc.board_id AS abc_board_id,
        abc.min_num AS abc_min_num,
        abc.max_num AS abc_max_num,
        abc.name AS abc_name,
        abc.sequence AS abc_sequence,
        alv1.name AS abc_color,
        abc.object_version_number AS abc_object_version_number,
        ais.id AS ais_id,
        ais.name AS ais_name,
        ais.category_code AS ais_category_code,
        ais.is_completed AS ais_completed,
        ais.object_version_number AS ais_object_version_number,
        ai.issue_id AS ai_issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS ai_issue_num,
        ai.summary AS ai_summary,
        ai.assignee_id AS ai_assignee_id,
        alv.name AS ai_priority_name,
        ai.parent_issue_id AS ai_parent_issue_id,
        ai.type_code AS ai_type_code,
        ai.object_version_number AS ai_object_version_number
        FROM
        agile_board_column abc
        LEFT JOIN agile_board_column_status_rel abcsr ON abc.column_id = abcsr.column_id
        LEFT JOIN agile_issue_status ais ON abcsr.status_id = ais.id
        LEFT JOIN (SELECT ai1.*
        from agile_issue ai1 WHERE
        ai1.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        ) ai ON ai.status_id = ais.id
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN lookup_value alv1 ON abc.color_code = alv1.value_code
        WHERE abc.board_id = #{boardId}
        ORDER BY abc.sequence
    </select>

    <update id="columnSort">
        UPDATE agile_board_column
        SET sequence              = sequence + 1,
            object_version_number = object_version_number + 1
        WHERE board_id = #{boardId}
              AND sequence &gt;= #{sequence} AND sequence &lt; #{originSequence}
    </update>

    <update id="columnSortDesc">
        UPDATE agile_board_column
        SET sequence              = sequence - 1,
            object_version_number = object_version_number + 1
        WHERE board_id = #{boardId}
              AND sequence &gt; #{originSequence} AND sequence &lt;= #{sequence}
    </update>

    <update id="updateColumnCategory">
        UPDATE agile_board_column
        SET category_code = CASE
                            WHEN sequence = 0
                                THEN 'todo'
                            WHEN sequence = #{columnNum} - 1
                                THEN 'done'
                            ELSE 'doing'
                            END
        WHERE board_id = #{boardId}
    </update>

    <update id="updateColumnColor">
        UPDATE agile_board_column
        SET color_code = CASE
                         WHEN sequence = 0
                             THEN 'column_color_todo'
                         WHEN sequence = #{columnNum} - 1
                             THEN 'column_color_done'
                         ELSE 'column_color_doing'
                         END
        WHERE board_id = #{boardId}
    </update>

    <select id="queryColumnStatusRelByProjectId" resultType="io.choerodon.agile.infra.dto.ColumnWithStatusRelDTO">
        SELECT
            DISTINCT
            (abcsr.status_id)
        FROM
            agile_board_column_status_rel abcsr
        WHERE
            abcsr.project_id = #{projectId} and abcsr.status_id != 0
    </select>

    <update id="updateMaxAndMinNum" parameterType="io.choerodon.agile.api.vo.ColumnWithMaxMinNumVO">
        UPDATE agile_board_column
        SET max_num               = #{columnInfo.maxNum},
            min_num               = #{columnInfo.minNum},
            object_version_number = object_version_number + 1
        WHERE
            project_id = #{columnInfo.projectId}
            AND column_id = #{columnInfo.columnId}
            AND object_version_number = #{columnInfo.objectVersionNumber}
    </update>

    <select id="selectByBoardIdOrderBySequence" resultType="io.choerodon.agile.infra.dto.BoardColumnDTO">
        SELECT *
        FROM
            agile_board_column
        WHERE
            board_id = #{boardId}
        ORDER BY sequence
    </select>

    <update id="updateSequenceWhenDelete">
        UPDATE agile_board_column
        SET sequence = sequence - 1
        WHERE
            board_id = #{boardId} AND sequence > #{sequence}
    </update>

    <select id="queryColumnByColumnIds" resultType="io.choerodon.agile.infra.dto.ColumnDTO">
        SELECT abc.column_id ,abc.name,alv.name as color,abc.category_code
        from agile_board_column abc left join lookup_value alv on
        alv.type_code = 'column_color'
        and alv.value_code = abc.color_code where abc.column_id in
        <foreach collection="columnIds" item="columnId"
                 open="(" close=")" separator=",">
            #{columnId}
        </foreach>
        ORDER BY abc.sequence
    </select>

    <select id="selectEpicBatchByIds" resultType="io.choerodon.agile.infra.dto.EpicIdWithNameDTO">
        SELECT
        issue_id AS epic_id,
        epic_name AS epic_name
        FROM agile_issue WHERE issue_id IN
        <foreach collection="epicIds" item="epicId"
                 open="(" close=")" separator=",">
            #{epicId}
        </foreach>
    </select>

    <select id="queryColumnIdsByBoardId" resultType="java.lang.Long">
        SELECT abc.column_id
        FROM
            agile_board_column abc
        WHERE
            abc.project_id = #{projectId} AND abc.board_id = #{boardId}
        ORDER BY abc.sequence
    </select>

    <delete id="batchDeleteColumnAndStatusRel">
        <foreach collection="removeStatusWithProjects" item="removeStatusWithProject" separator=";">
            DELETE ais,abcsr
            from agile_issue_status ais
            left join agile_board_column_status_rel abcsr on ais.status_id = abcsr.status_id and ais.project_id =
            abcsr.project_id
            WHERE ais.status_id in
            <foreach collection="removeStatusWithProject.deleteStatusIds" item="deleteStatusId"
                     open="(" close=")" separator=",">
                #{deleteStatusId}
            </foreach>
            and
            ais.project_id = #{removeStatusWithProject.projectId}
        </foreach>
    </delete>

    <select id="sortAndJudgeCompleted" resultType="java.lang.Long">
        select ai.issue_id
        from agile_issue ai, agile_issue_status ais
        where ai.project_id = #{projectId}
        and ai.status_id = ais.status_id and ais.project_id = #{projectId} and ais.is_completed = 1
        and (
        select count(ai2.issue_id)
        from agile_issue ai2, agile_issue_status ais2
        where ai2.project_id = #{projectId}
        and ai2.parent_issue_id = ai.issue_id
        and ai2.status_id = ais2.status_id and ais2.project_id = #{projectId} and ais2.is_completed = 0
        ) = 0
        and ai.issue_id in
        <foreach collection="parentIds" item="parentId"
                 open="(" close=")" separator=",">
            #{parentId}
        </foreach>
        order by ai.issue_id
    </select>

    <select id="getAllColumnNum" resultType="io.choerodon.agile.infra.dto.ColumnIssueNumDTO">
        select
        abc.column_id,
        COUNT(ai.issue_id) AS issue_count
        from agile_board_column abc
        left join agile_board_column_status_rel abcsr on abc.column_id = abcsr.column_id
        left join agile_issue_status ais on abcsr.status_id = ais.status_id and ais.project_id = #{projectId}
        LEFT JOIN (SELECT
        ai1.issue_id,
        ai1.status_id
        FROM agile_issue ai1, agile_issue_sprint_rel aisr
        WHERE aisr.sprint_id = #{sprintId} AND ai1.issue_id = aisr.issue_id
        <if test="columnConstraint == 'issue'">
            and ai1.type_code in ('story', 'task', 'bug', 'sub_task') and ai1.apply_type = 'agile'
        </if>
        <if test="columnConstraint == 'issue_without_sub_task'">
            and ai1.type_code in ('story', 'task', 'bug') and ai1.apply_type = 'agile'
        </if>
        ) ai ON ai.status_id = ais.status_id and ais.project_id = #{projectId}
        where abc.board_id = #{boardId}
        group by abc.column_id
    </select>

    <select id="queryRelByColumnIds" resultType="io.choerodon.agile.infra.dto.BoardColumnStatusRelDTO">
        select * from agile_board_column_status_rel abcsr
        where abcsr.column_id IN
        <foreach collection="columnIds" item="columnId"
                 open="(" close=")" separator=",">
            #{columnId}
        </foreach>
    </select>
</mapper>